---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import "@fontsource/varela-round";
import QuizComponent from "../../components/QuizComponent";
// 1. Genera una nueva ruta para cada entrada de colecciÃ³n
export async function getStaticPaths() {
  const tutorialsEntries = await getCollection("tutorials");
  return tutorialsEntries.map((entry) => ({
    params: { tutorial: entry.slug },
    props: { entry },
  }));
}
// 2. Para tu plantilla, puedes obtener la entrada directamente de la prop
const { entry } = Astro.props;
const { Content } = await entry.render();
const { quiz } = entry.data;
---

<Layout title={entry.data.title}>
  <a href="/tutorials" class="btn-back" aria-label="Back to Home">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
        d="M9 11l-4 4l4 4m-4 -4h11a4 4 0 0 0 0 -8h-1"></path></svg
    >
  </a>

  <button class="btn-top">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="#fff"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
        d="M6 9l6 6l6 -6"></path></svg
    >
  </button>
  <div class="tutorial-content">
    <div class="image-container">
      <img
        src={entry.data.image}
        alt=`image of tutorial ${entry.data.tags.join(' ')}`
        class="image-main-tutorial"
      />
    </div>
    <Content />
  </div>
  <QuizComponent
    questions={quiz}
    tutorialTitle={entry.data.title}
    client:load
  />
</Layout>

<style>
  .tutorial-content {
    --bg: #1e1c29;
    --color-title: #e4d1b9;
    --color-sub: #f7f17d;
    --color-text: #cfc49d;
    background: var(--bg);
    padding: 30px 35px;
    margin-block: var(--margin-between);
    margin-bottom: 0;
    display: flex;
    flex-direction: column;

    .image-container {
      margin: 30px 0;
      height: 400px;
      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        vertical-align: middle;
        border-radius: 20px;
      }
    }

    .title {
      text-align: center;
      color: var(--color-title);
      font-size: 3.125rem;
      margin-bottom: 40px;
    }

    h2 {
      color: #fff;
      font-size: 1.875rem;
    }

    h3,
    h4 {
      font-size: 1.5625rem;
      color: var(--color-sub);
      margin: 0.3125rem 0;
    }

    h4 {
      font-size: 1rem;
    }

    p {
      font-family: "Varela Round", sans-serif;
      font-size: 1.125rem;
      color: var(--color-text);
      padding-left: 0.9375rem;
      margin: 1.25rem 0;
    }

    ul,
    ol {
      display: flex;
      flex-direction: column;
      gap: 0.625rem;
      margin-block: 1.5625rem;
      li {
        list-style: none;
        padding: 0.625rem;
        background: #8396b5;
        border-left: 0.25rem solid #5788a5;
        font-size: 1.125rem;
        color: #281b39;
      }
    }

    iframe {
      width: 100% !important;
      max-width: 800px;
      height: 400px;
      align-self: center;
    }
  }

  .btn-back {
    position: absolute;
    top: 65px;
    z-index: 2000;
    background: #281b39;
    border: none;
    border-radius: 100%;
    padding: 5px;
    cursor: pointer;
    transition: all 0.1s ease-in-out;

    svg {
      width: 30px;
      height: 30px;
      vertical-align: top;
    }

    &:hover {
      opacity: 0.8;
      scale: 1.1;
    }
  }

  .btn-top {
    position: fixed;
    bottom: 65px;
    right: 6.25rem;
    z-index: 2000;
    background: #281b39;
    border: none;
    border-radius: 100%;
    padding: 5px;
    cursor: pointer;
    transition: all 0.1s ease-in-out;

    @media screen and (width < 1100px) {
      right: 10px;
    }

    svg {
      width: 30px;
      height: 30px;
      vertical-align: top;
      rotate: 180deg;
    }

    &:hover {
      opacity: 0.8;
      scale: 1.1;
    }
  }
</style>

<script>
  const btnTop = document.querySelector(".btn-top") as HTMLElement;
  btnTop?.addEventListener("click", () => {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  });
</script>
